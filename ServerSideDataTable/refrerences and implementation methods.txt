Steps :


1)Create new .net core 7 mvc  project 


2)add libraries 
    Microsoft.EntityFrameworkCore
	Microsoft.EntityFrameworkCore.Design
	Microsoft.EntityFrameworkCore.SqlServer
	Microsoft.EntityFrameworkCore.Tools
	Microsoft.VisualStudio.Web.CodeGeneration.Design
	
	
	
3) Create DbContextClass 


4)setup connection string  in appsetting file
 	 {
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "ConnectionStrings": {
    "DefaultConnection": "Data Source=(localdb)\\ProjectsV13;Initial Catalog=testdb;Integrated Security=True"
  }
}


5) Create Table 

CREATE TABLE [dbo].[User](
	[Id] [int] IDENTITY(1,1) NOT NULL,
	[FirstName] [varchar](255) NULL,
	[LastName] [varchar](200) NULL,
	[Contact] [varchar](200) NULL,
	[Email] [varchar](200) NULL,
	[Address] [varchar](200) NULL,
) ON [PRIMARY]

GO



6) inject db context in program.cs file 

builder.Services.AddDbContext<DbContextClass>();



7) Create controller  UsersController


8) create view and post method  as 
 public class UsersController : Controller
    {
        private readonly DbContextClass _context;
        public UsersController(DbContextClass context)
        {
            _context = context;
        }
        [HttpPost("GetUsers")]
        public IActionResult GetUsers()
        {
            try
            {
                var draw = Request.Form["draw"].FirstOrDefault();
                var start = Request.Form["start"].FirstOrDefault();
                var length = Request.Form["length"].FirstOrDefault();
                var sortColumn = Request.Form["columns[" + Request.Form["order[0][column]"].FirstOrDefault() + "][name]"].FirstOrDefault();
                var sortColumnDirection = Request.Form["order[0][dir]"].FirstOrDefault();
                var searchValue = Request.Form["search[value]"].FirstOrDefault();
                int pageSize = length != null ? Convert.ToInt32(length) : 0;
                int skip = start != null ? Convert.ToInt32(start) : 0;
                int recordsTotal = 0;
                var userData = (from tempuser in _context.User select tempuser);
                if (!(string.IsNullOrEmpty(sortColumn) && string.IsNullOrEmpty(sortColumnDirection)))
                {
                    userData = userData.OrderBy(s => sortColumn + " " + sortColumnDirection);
                }
                if (!string.IsNullOrEmpty(searchValue))
                {
                    userData = userData.Where(m => m.FirstName.Contains(searchValue)
                                                || m.LastName.Contains(searchValue)
                                                || m.Contact.Contains(searchValue)
                                                || m.Email.Contains(searchValue)
                                                || m.Address.Contains(searchValue));
                }
                recordsTotal = userData.Count();
                var data = userData.Skip(skip).Take(pageSize).ToList();
                var jsonData = new { draw = draw, recordsFiltered = recordsTotal, recordsTotal = recordsTotal, data = data };
                return Ok(jsonData);
            }
            catch (Exception ex)
            {
                throw;
            }
        }
        public IActionResult Index()
        {
            return View();
        }
    }
	
	
	
9) Add view as 
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css" rel="stylesheet">
<link href="https://cdn.datatables.net/fixedcolumns/4.2.2/css/fixedColumns.dataTables.min.css" rel="stylesheet">

<div class="container">
     <br />
     <div style="width:90%; margin:0 auto;">
         <table id="userTable" class="table table-striped table-bordered nowrap" width="100%" cellspacing="0">
             <thead>
                 <tr>
                     <th>ID</th>
                     <th>First Name</th>
                     <th>Last Name</th>
                     <th>Contact</th>
                     <th>Email</th>
                     <th>Address</th>
                 </tr>
             </thead>
         </table>
     </div>
 </div>
 @section Scripts
 {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/fixedcolumns/4.2.2/js/dataTables.fixedColumns.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#userTable").DataTable({
                "processing": true,
                "serverSide": true,
                "filter": true,
                "ajax": {
                    "url": "/GetUsers",
                    "type": "POST",
                    "datatype": "json"
                },
                "columnDefs": [{
                    "targets": [0],
                    "visible": false,
                    "searchable": false
                }],
                "columns": [
                    { "data": "id", "name": "Id", "autoWidth": true },
                    { "data": "firstName", "name": "First Name", "autoWidth": true },
                    { "data": "lastName", "name": "Last Name", "autoWidth": true },
                    { "data": "contact", "name": "Country", "autoWidth": true },
                    { "data": "email", "name": "Email", "autoWidth": true },
                    { "data": "address", "name": "Address", "autoWidth": true },
                ]
            });
        });
    </script>
 }
 
 
 
 10) run the project and open url localhost:../Users/Index 